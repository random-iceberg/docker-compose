# Common parts
services:
  # Frontend service (React)
  frontend:
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "8080:80" # nginx
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend service (FastAPI)
  backend:
    restart: unless-stopped
    depends_on:
      - model
    environment:
      DB_USER: backend
      DB_DATABASE: backend
      DB_ADDRESS: postgres
      DB_PASSWORD: "${POSTGRES_PASSWORD_BACKEND:-_backend}"
      BACKEND_WEB_ROOT: /api
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Database container (Postgres)
  postgres:
    build: ../postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data:delegated
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-_postgres}"
      POSTGRES_PASSWORD_BACKEND: ${POSTGRES_PASSWORD_BACKEND:-_backend}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U backend -d backend"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Model service (FastAPI)
  model:
    restart: unless-stopped
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres-data:
